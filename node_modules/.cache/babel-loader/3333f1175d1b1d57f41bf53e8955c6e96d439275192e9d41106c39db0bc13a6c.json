{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\web-sayfam\\\\src\\\\components\\\\ModeSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModeSwitch = _ref => {\n  _s();\n  let {\n    handleToggle\n  } = _ref;\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(\"darkMode\");\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n    handleToggle();\n  };\n  const changeLanguage = () => {\n    const newLanguage = i18n.language === \"tr\" ? \"en\" : \"tr\";\n    i18n.changeLanguage(newLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modeSwitch\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"toggle-switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"toggle-switch-checkbox\",\n        onChange: toggleDarkMode,\n        checked: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modeText\",\n      children: darkMode ? t(\"aydinlik\") : t(\"karanlik\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modeText\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modeText2\",\n      onClick: changeLanguage,\n      children: [i18n.language === \"en\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: t(\"TÜRKÇE\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ENGLISH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), i18n.language === \"en\" && \"\" + t]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSwitch, \"6qTfwIxn82UFQy4jOkPPoO1Bv+E=\", false, function () {\n  return [useTranslation];\n});\n_c = ModeSwitch;\nexport default ModeSwitch;\nvar _c;\n$RefreshReg$(_c, \"ModeSwitch\");","map":{"version":3,"names":["React","useEffect","useState","useTranslation","jsxDEV","_jsxDEV","ModeSwitch","_ref","_s","handleToggle","t","i18n","darkMode","setDarkMode","savedMode","localStorage","getItem","JSON","parse","setItem","stringify","toggleDarkMode","prevMode","changeLanguage","newLanguage","language","className","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/EMRE CAN/web-sayfam/src/components/ModeSwitch.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ModeSwitch = ({ handleToggle }) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [darkMode, setDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem(\"darkMode\");\r\n    return savedMode ? JSON.parse(savedMode) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"darkMode\", JSON.stringify(darkMode));\r\n  }, [darkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode((prevMode) => !prevMode);\r\n    handleToggle();\r\n  };\r\n\r\n  const changeLanguage = () => {\r\n    const newLanguage = i18n.language === \"tr\" ? \"en\" : \"tr\";\r\n    i18n.changeLanguage(newLanguage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modeSwitch\">\r\n      <label className=\"toggle-switch\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-switch-checkbox\"\r\n          onChange={toggleDarkMode}\r\n          checked={darkMode}\r\n        />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n      <div className=\"modeText\">{darkMode ? t(\"aydinlik\") : t(\"karanlik\")}</div>\r\n      <div className=\"modeText\">|</div>\r\n      <div className=\"modeText2\" onClick={changeLanguage}>\r\n        {i18n.language === \"en\" ? (\r\n          <span>{t(\"TÜRKÇE\")}</span>\r\n        ) : (\r\n          <span>ENGLISH</span>\r\n        )}\r\n        {i18n.language === \"en\" && \"\" + t}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeSwitch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}